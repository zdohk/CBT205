:gdoc.
.*
.CM LIB: XSYS.MVSESA.SCRIPT(SINGLEIM)
.CM GDE: DMV0016
.CM DOC: THIS SCRIPT FILE IS THE DOCUMENT FOR
.CM      the MVS single image presentation.
.*
.DD IMBEDS DSN 'XSYS.MVSESA.IMBEDS(IMBEDS)'
.IM IMBEDS
:frontm.
:titlep.
:title.
MVS Single Image
:docnum.SINGLEIM
:date.03/03/92
:author.Jack Corbett
:author.Ken Tomiak
:address.
:aline.Prepared for:
:aline.Computer and Data Communications Services Agency
:aline.111 8th Avenue
:aline.New York, New York  10011
:eaddress.
:etitlep.
:body.
.tm .5
.rh off
.if &$PDEV = 3820 .BF X0T055HI
.*
.ce 1;.us 1;Agenda
.sk 2
.*
:ul.
:li.Introduction
.sk 2
:li.RULES
.sk 2
:li.Single Image versus Other Methods
.sk 2
:li.Level Tracking
.sk 2
:li.SYSRES Requirements
.sk 2
:li.Custom Libraries
.sk 2
:li.Options
.sk 2
:li.HCD versus IOGEN
.sk 2
:li.Questions?
:eul
.pa
.*
.ce 1;.us 1;Introduction
.sk 2
.*
:ul.
:li.Who We Are
:eul
.pa
.*
.ce 1;.us 1;Rules
.*
:ol.
.if &$PDEV = 3820 .BF X0T075ZC
:li.Think BIG. What you do now affects all the systems.
.if &$PDEV = 3820 .pf
:li.NEVER UPDATE AN ACTIVE SYSRES.
:li.Document your work.
:li.Clean-up after installs.
:li.Keep discrepencies out. Make USERMODs identical for all systems.
:li.Plan for CDCSA and DOF and whatever other
agencies may come in the future.
:li.Think PERFORMANCE and DISASTER RECOVERY when allocating/moving
datasets.
:eol.
.sk 3
:note.These rules extracted from MVS Systems Programming at CDCSA Guide.
.pa
.*
.ce 1;.us 1;Single Image versus Other Methods
.sk 2
.*
:ul.
:li.Maintenance "Applied" only once
.sk 2
:li.Indirect Cataloging
.sk 2
:li.Read-Only SYSRES Volumes
.sk 2
:li.Multiple systems can access one SYSRES volume
.sk 2
:li.Full volume propagation
.sk 2
:li.SMP/E Zone Integrity
:eul
.pa
.*
.ce 1;.us 1;Old Method
.sk 2
.*
:ul.
:li.Dataset by Dataset Propagation.
.sk 2
:li.Unreliability between Zones and Libraries.
.sk 2
:li.Migration to Production.
.sk 2
:li.Operation Requirements  (Clip Volume).
.sk 2
:li.Zone access after volume reformat.
.sk 2
:li.Volatile datasets on SYSRES.
:eul.
.pa
.*
.ce 1;.us 1;Level Tracking
.sk 2
.*
:ul.
:li.Purpose
.sk 2
:li.How It Works
.sk 2
:li.Determining What is a Level
:eul
.pa
.*
.ce 1;.us 1;Level Tracking
.sk 2
.*
:rdef ID=rowxx
      HP='0 0'
      ALIGN='left left left center left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:rdef ID=rowxxB
      HP='2 2'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:TABLE ID=lvlcln REFID=rowxx
       SPLIT=no
       ROTATE=0
       PAGE
       width=90
    .
:thd REFID=rowxxB.
:c.Status:c.UNIT:c.VOLSER:c.Level:c.IPLPARM:ec.
:ethd.
:ROW REFID=rowxx.
:c.Current:c.840:c.MRS001:c.56:c.085800M1:ec.
:ROW REFID=rowxx.
:c.OLD:c.:c.:c.:c.:ec.
:ROW REFID=rowxx.
:c.Target:c.868:c.MRS002:c.56:c.085800M1:ec.
:ROW REFID=rowxx.
:c.Backup:c.:c.:c.:c.:ec.
:tcap.Propagated Level
:tdesc.Right after a clone the levels would be the same.
:etable.
.*
:rdef ID=rowxx
      HP='0 0'
      ALIGN='left left left center left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:rdef ID=rowxxB
      HP='2 2'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:TABLE ID=lvltgt REFID=rowxx
       SPLIT=no
       ROTATE=0
       PAGE
       width=90
    .
:thd REFID=rowxxB.
:c.Status:c.UNIT:c.VOLSER:c.Level:c.IPLPARM:ec.
:ethd.
:ROW REFID=rowxx.
:c.Current:c.840:c.MRS001:c.56:c.085800M1:ec.
:ROW REFID=rowxx.
:c.OLD:c.:c.:c.:c.:ec.
:ROW REFID=rowxx.
:c.Target:c.868:c.MRS002:c.57:c.085800M1:ec.
:ROW REFID=rowxx.
:c.Backup:c.:c.:c.:c.:ec.
:tcap.New Level in Progress
:tdesc.When work is being done to a level it appears under
the Target status. Any change to a SYSRES constitutes a level
change. Changes are grouped into a level for management purposes.
:etable.
.*
:rdef ID=rowxx
      HP='0 0'
      ALIGN='left left left center left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:rdef ID=rowxxB
      HP='2 2'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:TABLE ID=lvlnew REFID=rowxx
       SPLIT=no
       ROTATE=0
       PAGE
       width=90
    .
:thd REFID=rowxxB.
:c.Status:c.UNIT:c.VOLSER:c.Level:c.IPLPARM:ec.
:ethd.
:ROW REFID=rowxx.
:c.Current:c.868:c.MRS002:c.57:c.085800M1:ec.
:ROW REFID=rowxx.
:c.OLD:c.840:c.MRS001:c.56:c.085800M1:ec.
:ROW REFID=rowxx.
:c.Target:c.:c.:c.:c.:ec.
:ROW REFID=rowxx.
:c.Backup:c.:c.:c.:c.:ec.
:tcap.IPL Board
:tdesc.This board represents what the MVSP system might look like.
:etable.
.*
:rdef ID=rowxx
      HP='0 0'
      ALIGN='left left left center left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:rdef ID=rowxxB
      HP='2 2'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='18 12 16 12 20'
      ARRANGE='1 2 3 4 5'
    .
:TABLE ID=lvl3   REFID=rowxx
       SPLIT=no
       ROTATE=0
       PAGE
       width=90
    .
:thd REFID=rowxxB.
:c.Status:c.UNIT:c.VOLSER:c.Level:c.IPLPARM:ec.
:ethd.
:ROW REFID=rowxx.
:c.Current:c.868:c.MRS002:c.57:c.085800M1:ec.
:ROW REFID=rowxx.
:c.OLD:c.:c.:c.:c.:ec.
:ROW REFID=rowxx.
:c.Target:c.:c.:c.:c.:ec.
:ROW REFID=rowxx.
:c.Backup:c.840:c.MRS001:c.57:c.085800M1:ec.
:tcap.HOT BACKUP
:tdesc.During periods of inactivity to a SYSRES a HOT backup
can be made.
:etable.
.*
.pa
.*
.ce 1;.us 1;SYSRES Requirements
.sk 2
.*
:ul.
:li.Read-Only Sysres Volumes.
.sk 2
:li.Volatile Datasets Removed.
.sk 2
:li.MVS Base Products Only
:eul
.pa
.*
.ce 1;.us 1;Custom Libraries
.sk 2
.*
:ul.
:li.Purpose
.sk 2
:li.How It Works
.sk 2
:li.System Specific vs Common
.sk 2
:li.Determining Which to Use
.sk 2
:li.EXITS
.sk 2
:li.SVCs
.sk 2
:li.RACF Data Set Name Table
:eul
.pa
.*
.ce 1;.us 1;Custom Libraries
.sk 2
.*
:rdef ID=rowxx
      HP='0 0'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='45 45'
      ARRANGE='1 2'
    .
:rdef ID=rowxxB
      HP='2 2'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='90'
      ARRANGE='1'
    .
:TABLE ID=lnklst REFID=rowxx
       SPLIT=no
       ROTATE=0
       PAGE
       width=90
    .
:thd REFID=rowxxB.
:c.LNKLST:ec.
:ethd.
:ROW REFID=rowxx.
:c.MVSX/MVSP:c.DOFX/DOFD/DOFP:ec.
:ROW REFID=rowxx.
:ROW REFID=rowxx.
:ROW REFID=rowxx.
:c.SYS1.CSC.LINKLIB:c.SYS1.DOF.LINKLIB:ec.
:ROW REFID=rowxx.
:c.SYS1.CSCDOF.LINKLIB:c.SYS1.CSCDOF.LINKLIB:ec.
:ROW REFID=rowxx.
:c.other:c.other:ec.
:tcap.First Two Entries of LNKLST00
:tdesc.These libraries precede other software libraries.
:etable.
.sk 3
:rdef ID=rowxx
      HP='0 0'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='45 45'
      ARRANGE='1 2'
    .
:rdef ID=rowxxB
      HP='2 2'
      ALIGN='left left'
      CONCAT=yes
      VALIGN='top top'
      ROTATE='0 0'
      CWIDTHS='90'
      ARRANGE='1'
    .
:TABLE ID=lpalst REFID=rowxx
       SPLIT=no
       ROTATE=0
       PAGE
       width=90
    .
:thd REFID=rowxxB.
:c.LPALST:ec.
:ethd.
:ROW REFID=rowxx.
:c.MVSX/MVSP:c.DOFX/DOFD/DOFP:ec.
:ROW REFID=rowxx.
:ROW REFID=rowxx.
:ROW REFID=rowxx.
:c.SYS1.CSC.LPALIB:c.SYS1.DOF.LPALIB:ec.
:ROW REFID=rowxx.
:c.SYS1.CSCDOF.LPALIB:c.SYS1.CSCDOF.LPALIB:ec.
:ROW REFID=rowxx.
:c.other:c.other:ec.
:tcap.First Two Entries of LPALST00
:tdesc.These libraries precede other software libraries.
:etable.
.pa
.*
.ce 1;.us 1;Options
.sk 2
.*
:ul.
:li.DFSORT
.sk 2
:li.Compilers
.sk 2
:li.Other Products
:ul.
:li.RACF
:li.TLMS
:li.JES2
:eul.
:eul.
.pa
.*
.ce 1;.us 1;HCD vs IOGEN
.*
.sk 2
:ul.
:li.Channel Subsytem Configuration (IOCP).
.sk 2
:li.MVS Operating Configuration (MVSCP).
.sk 2
:li.Input/Output Definition File (IODF).
.sk 2
:li.IODF EDT not compatabile with MVSCP EDT.
.sk 2
:li.IODF can contain multiple OS configurations.
.sk 2
:li.Esoteric Groups can be defined in each EDT.
.sk 2
:li.OS configurations can contain more than one EDT.
:eul.
:egdoc.
